{
    "Outputs": {
        "InstanceId": {
            "Description": "InstanceId of the newly created EC2 instance",
            "Value": {
                "Ref": "Ec2Instance"
            }
        },
        "PublicDNS": {
            "Description": "Public DNSName of the newly created EC2 instance",
            "Value": {
                "Fn::GetAtt": [
                    "Ec2Instance",
                    "PublicDnsName"
                ]
            }
        },
        "PublicIP": {
            "Description": "Public IP address of the newly created EC2 instance",
            "Value": {
                "Fn::GetAtt": [
                    "Ec2Instance",
                    "PublicIp"
                ]
            }
        }
    },
    "Parameters": {
        "CIDRLocation": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be a valid CIDR (x.x.x.x/x)",
            "Default": "205.118.217.10/32",
            "Description": "Public IP address of the location accessing the instance.",
            "Type": "String"
        },
        "InstanceType": {
            "AllowedValues": [
                "t2.micro"
            ],
            "ConstraintDescription": "Must be a valid EC2 instance type.",
            "Default": "t2.micro",
            "Description": "EC2 instance type",
            "Type": "String"
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName"
        }
    },
    "Resources": {
        "Ec2Instance": {
            "Properties": {
                "ImageId": "ami-061392db613a6357b",
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SecurityGroupIds": [
                    {
                        "Fn::GetAtt": [
                            "InstanceSG",
                            "GroupId"
                        ]
                    }
                ],
                "SubnetId": "subnet-0fdeea37a83c66cc7",
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "sudo yum update -y \n",
                                "sudo amazon-linux-extras install docker -y \n",
                                "sudo systemctl enable docker \n",
                                "sudo systemctl start docker \n",
                                "sudo usermod -aG ec2-user docker \n",
                                "sudo docker pull ghost:latest \n",
                                "sudo docker run -d ",
                                "    --name ghost ",
                                "    -p 443:2368 ",
                                "    ghost:latest \n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "InstanceSG": {
            "Properties": {
                "GroupDescription": "Default SG for the CF instance.",
                "GroupName": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "AWS::StackName"
                            },
                            "-sg"
                        ]
                    ]
                },
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "CIDRLocation"
                        },
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": {
                            "Ref": "CIDRLocation"
                        },
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": {
                            "Ref": "CIDRLocation"
                        },
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    }
                ],
                "VpcId": "vpc-eaadff93"
            },
            "Type": "AWS::EC2::SecurityGroup"
        }
    }
}
